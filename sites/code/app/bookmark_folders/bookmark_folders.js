if(!window.modules) window.modules={};
modules.bookmark_folders=function(options){
	var self=this;
    self.options=options;
	this.show=function(){
        self.showLoading(function(){
            self.onViewReady();
        })
	}
    this.getContainer=function(){
        return $('#homeswiper');
    }
	this.onViewReady=function(){
		self.ele.find('.content').render({
			template:'bookmark_folders_page',
			append:false,
			data:{
                resp:self.resp
			},
			binding:function(ele){
                self.ele.find('.x_add').stap(function(){
                    self.getName('',function(name){
                        self.saveCollection(name);
                    });
                },1,'tapactive')
                self.infinitescroller=new modules.infinitescroll({
                    ele:ele.find('.content'),
                    scroller:ele,
                    search:{
                        input:ele.find('input'),
                        closer:ele.find('.x_cancel')
                    },
                    swipeContainer:self.getContainer(),
                    endpoint:app.sapiurl+'/module/feed/folderfeed',
                    loaderClass:'lds-ellipsis-black',
                    inline:(app.isWebLayout())?1:0,
                    offset:'200%',
                    onInterval:{
                        time:3000,
                        callback:function(){
                            //pself.updateTimes();
                        }
                    },
                    opts:{
                    },
                    max:10,
                    template:'bookmark_folders_item',
                    nodata:'<div style="padding:20px;text-align:center;color:#888;margin-top:20px;"><div style="padding-bottom:10px;"><i class="icon-info" style="font-size:55px;"></i></div><div>You dont have and folders yet.</div></div>',
                    onPageReady:function(ele){
                        ele.find('.bookmarkfolderitem').stap(function(){
                            self.showFolder($(this).attr('data-id'))
                        },1,'tapactive');
                        ele.find('.x_more').stap(function(e){
                            phi.stop(e)
                            self.showMore($(this).attr('data-id'),$(this))
                        },1,'tapactive')
                    },
                    scrollBindings:{
                        scrollStart:function(){
                        },
                        scroll:function(obj){
                        }
                    }
                });
			}
		})
	}
    this.showMore=function(tid,ele){
        var alert=new modules.mobilealert({
            display:{
                ele:ele,
                container:self.infinitescroller.scroller
            },
            menu:[{
                id:'edit',
                name:'Edit Folder',
                icon:'icon-pencil'
            },{
                id:'delete',
                name:'Delete Folder',
                icon:'icon-trash-empty'
            }],
            onSelect:function(id){
                if(id=='edit'){
                    self.editFolder(self.infinitescroller.getById(tid));
                }
                if(id=='delete'){
                    self.deleteFolder(self.infinitescroller.getById(tid).id,function(){
                        self.updateHomeFolders();
                        self.infinitescroller.reload();
                    })
                }
            }
        });
        alert.show();
    }
    this.deleteFolderApi=function(id,cb){
        app.api({
            url:app.sapiurl+'/module/bookmark_add/deletefolder',
            data:{
                id:id
            },
            timeout:5000,
            callback:function(resp){
                if(resp.success){
                    if(cb) cb();
                }else{
                     modules.toast({
                        content:'Error saving: '+resp.error,
                        remove:2500,
                        icon:'icon-warning-sign'
                    });
                }
            }
        });
    }
    this.deleteFolder=function(id,cb){
        var menu=[];
        if(app.isWebLayout()){
            app.comingSoon();
        }else{
            menu.push({
                id:'yes',
                name:'Yes, delete folder',
                icon:'icon-trash-empty'
            })
            menu.push({
                id:'no',
                name:'Nevermind',
                icon:'icon-cancel'
            })
            var alert=new modules.mobilealert({
                menu:menu,
                onSelect:function(rid){
                    if(rid=='yes'){
                        self.deleteFolderApi(id,cb);
                    }
                    if(rid=='no'){
                        
                    }
                }
            });
            alert.show();
        }
    }
    this.updateHomeFolders=function(){
        if(app.home.pages.streams){
            app.home.pages.streams.pages.bookmarks.updateFolders();
        }
    }
    this.editFolder=function(folder){
        var bm=new modules.bookmark_add({
            folder:folder,
            onFolderNameUpdate:function(data){
                //set name!
                //self.ele.find('.foldername').html(data.name);
                self.updateHomeFolders();
                self.infinitescroller.reload();
            }
        });
        bm.editFolder();
    }
    this.renameCollection=function(id,name){
        app.api({
            url:app.sapiurl+'/module/bookmark_add/renamecollection',
            data:{
                id:id,
                name:name
            },
            timeout:5000,
            callback:function(resp){
                if(resp.success){//alls good
                    //reload infinitescroller
                    self.updateHomeFolders();
                    self.infinitescroller.reload();
                }else{
                    modules.toast({
                        content:resp.error,
                        remove:2500,
                        icon:'icon-warning-sign',
                        retry:1,
                        onRetry:function(){
                            self.saveCollection(name);
                        }
                    });
                }
            }
        });
    }
    this.saveCollection=function(name){
        app.api({
            url:app.sapiurl+'/module/bookmark_add/addcollection',
            data:{
                name:name
            },
            timeout:5000,
            callback:function(resp){
                if(resp.success){//alls good
                    //reload infinitescroller
                    self.infinitescroller.reload();
                }else{
                    modules.toast({
                        content:resp.error,
                        remove:2500,
                        icon:'icon-warning-sign',
                        retry:1,
                        onRetry:function(){
                            self.saveCollection(name);
                        }
                    });
                }
            }
        });
    }
    this.getName=function(name,cb){
        app.prompt({
            title:'Name for Collection',
            message:'',
            text:name,
            buttons:['Save','Cancel'],
            callback:function(results){
                if(results.buttonIndex=="1"){
                    var text=results.input1;
                    cb(text)
                }
            }
        })
    }
    this.showFolder=function(id){
        var d=self.infinitescroller.getById(id);
        app.home.manager.register('bookmark_folder',{
            id:id,
            data:d
        })    
    }
    this.getName=function(){
        return 'Folders';
    }
    this.onNavClick=function(){
        self.goBack();
    }
    this.goBack=function(){
        self.onBack(function(){
            app.home.manager.onBack();
        })
    }
    this.setStatView=function(){
        modules.stats.setPage('streams','folders');
    }
	this.showLoading=function(cb){
		options.ele.subpage({
            loadtemplate:'bookmark_folders_loading',
            data:{
                data:options.data
            },
            onPageRendered:function(ele){
            	self.ele=ele;
            	ele.find('.backbtn').stap(function(){
            		self.goBack();
            	},1,'tapactive')
            },
            onPageReady:function(ele,onback){
                self.onBack=onback;
                cb();
            },
            onPageReturn:function(){
                self.destroy();
            }
        });
	}
	this.destroy=function(){
        self.ele.remove();
	}
}